# The following environment variables are substituted if present
# * QUORUM_CONSENSUS: default to istanbul
# * QUORUM_DOCKER_IMAGE: default to quorumengineering/quorum:2.4.0
# * QUORUM_TX_MANAGER_DOCKER_IMAGE: default to quorumengineering/tessera:0.10.2
# * QUORUM_GETH_ARGS: extra geth arguments to be included when running geth
# To use Constellation, set QUORUM_TX_MANAGER_DOCKER_IMAGE to Constellation docker image,
# e.g.: QUORUM_TX_MANAGER_DOCKER_IMAGE=quorumengineering/constellation:0.3.2 docker-compose up -d
# To use Remix, set QUORUM_GETH_ARGS="--rpccorsdomain https://remix.ethereum.org"

version: '3.7'

x-logging: &default-logging
    driver: 'splunk'
x-log-opts: &log-opts
    splunk-token: '11111111-1111-1111-1111-111111111111'
    splunk-url: 'https://localhost:18088'
    splunk-insecureskipverify: 'true'
    splunk-verify-connection: 'false'
    splunk-format: 'json'
    tag: '{{.Name}}-{{.ID}}'

x-quorum-def: &quorum-def
    restart: 'on-failure'
    image: '${QUORUM_DOCKER_IMAGE:-quorumengineering/quorum:2.4.0}'
    expose:
        - '21000'
        - '50400'
    healthcheck:
        test: ['CMD', 'wget', '--spider', '--proxy', 'off', 'http://localhost:8545']
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 5s
    deploy:
        resources:
            limits:
                cpus: '0.30'
    labels:
        com.quorum.consensus: ${QUORUM_CONSENSUS:-istanbul}
    entrypoint:
        - /bin/sh
        - -c
        - |
            UDS_WAIT=10
            if [ "$${PRIVATE_CONFIG}" != "ignore" ]; then
            for i in $$(seq 1 100)
            do
              set -e
              if [ -S $${PRIVATE_CONFIG} ] && \
                [ "I'm up!" == "$$(wget --timeout $${UDS_WAIT} -qO- --proxy off 172.16.239.10$${NODE_ID}:9000/upcheck)" ];
              then break
              else
                echo "Sleep $${UDS_WAIT} seconds. Waiting for TxManager."
                sleep $${UDS_WAIT}
              fi
            done
            fi
            DDIR=/qdata/dd
            rm -rf $${DDIR}
            mkdir -p $${DDIR}/keystore
            mkdir -p $${DDIR}/geth
            cp /config/nodekey$${NODE_ID} $${DDIR}/geth/nodekey
            cp /config/key$${NODE_ID} $${DDIR}/keystore/
            cp /config/disallowed-nodes.json $${DDIR}/
            cat /config/permissioned-nodes.json | sed 's/^\(.*\)@.*\?\(.*\)raftport=5040\([0-9]\)\(.*\)$$/\1@172.16.239.1\3:21000?discport=0\&raftport=50400\4/g' > $${DDIR}/static-nodes.json
            cp $${DDIR}/static-nodes.json $${DDIR}/permissioned-nodes.json
            cat $${DDIR}/static-nodes.json
            GENESIS_FILE="/config/istanbul-genesis.json"
            if [ "${QUORUM_CONSENSUS:-istanbul}" == "raft" ]; then
              GENESIS_FILE="/config/genesis.json"
            fi
            NETWORK_ID=$$(cat $${GENESIS_FILE} | grep chainId | awk -F " " '{print $$2}' | awk -F "," '{print $$1}')
            GETH_ARGS_raft="--raft --raftport 50400"
            GETH_ARGS_istanbul="--emitcheckpoints --istanbul.blockperiod 1 --mine --minerthreads 1 --syncmode full"
            geth --datadir $${DDIR} init $${GENESIS_FILE}
            geth \
              --identity node$${NODE_ID}-${QUORUM_CONSENSUS:-istanbul} \
              --datadir $${DDIR} \
              --permissioned \
              --nodiscover \
              --verbosity 5 \
              --networkid $${NETWORK_ID} \
              --rpc \
              --rpccorsdomain "*" \
              --rpcvhosts "*" \
              --rpcaddr 0.0.0.0 \
              --rpcport 8545 \
              --rpcapi admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,${QUORUM_CONSENSUS:-istanbul} \
              --rpcvhosts "*" \
              --ws \
              --wsaddr 0.0.0.0 \
              --wsorigins "*" \
              --metrics \
              --wsapi admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,${QUORUM_CONSENSUS:-istanbul} \
              --port 21000 \
              --unlock 0 \
              --password /config/passwords.txt \
              ${QUORUM_GETH_ARGS:-} $${GETH_ARGS_${QUORUM_CONSENSUS:-istanbul}}
x-tx-manager-def: &tx-manager-def
    image: '${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:0.10.2}'
    expose:
        - '9000'
        - '9080'
    restart: 'no'
    healthcheck:
        test: ['CMD-SHELL', '[ -S /qdata/tm/tm.ipc ] || exit 1']
        interval: 3s
        timeout: 3s
        retries: 20
        start_period: 5s
    deploy:
        resources:
            limits:
                cpus: '0.50'
                memory: 768M
    entrypoint:
        - /bin/sh
        - -c
        - |
            if [ "$${PRIVATE_CONFIG}" == "ignore" ]; then
              /bin/true
              exit 0
            fi
            DDIR=/qdata/tm
            rm -rf $${DDIR}
            mkdir -p $${DDIR}
            DOCKER_IMAGE="${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:0.10.2}"
            TX_MANAGER=$$(echo $${DOCKER_IMAGE} | sed 's/^.*\/\(.*\):.*$$/\1/g')
            echo "TxManager: $${TX_MANAGER}"
            case $${TX_MANAGER}
            in
              tessera)
                cp /config/tm$${NODE_ID}.pub $${DDIR}/tm.pub
                cp /config/tm$${NODE_ID}.key $${DDIR}/tm.key
                #extract the tessera version from the jar
                TESSERA_VERSION=$$(unzip -p /tessera/tessera-app.jar META-INF/MANIFEST.MF | grep Tessera-Version | cut -d" " -f2)
                echo "Tessera version (extracted from manifest file): $${TESSERA_VERSION}"
                # sorting versions to target correct configuration
                V08=$$(echo -e "0.8\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
                V09AndAbove=$$(echo -e "0.9\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
                TESSERA_CONFIG_TYPE="-09"
                case "$${TESSERA_VERSION}" in
                    "$${V09AndAbove}")
                        TESSERA_CONFIG_TYPE="-09"
                        ;;
                esac

                echo Config type $${TESSERA_CONFIG_TYPE}

                #generating the two config flavors
                cat <<EOF > $${DDIR}/tessera-config-09.json
                {
                  "useWhiteList": false,
                  "jdbc": {
                    "username": "sa",
                    "password": "",
                    "url": "jdbc:h2:./$${DDIR}/db;MODE=Oracle;TRACE_LEVEL_SYSTEM_OUT=0",
                    "autoCreateTables": true
                  },
                  "serverConfigs":[
                  {
                    "app":"ThirdParty",
                    "enabled": true,
                    "serverAddress": "http://$$(hostname -i):9080",
                    "communicationType" : "REST"
                  },
                  {
                    "app":"Q2T",
                    "enabled": true,
                    "serverAddress": "unix:$${DDIR}/tm.ipc",
                    "communicationType" : "REST"
                  },
                  {
                    "app":"P2P",
                    "enabled": true,
                    "serverAddress": "http://$$(hostname -i):9000",
                    "sslConfig": {
                      "tls": "OFF"
                    },
                    "communicationType" : "REST"
                  }
                  ],
                  "peer": [
                     {
                         "url": "http://txmanager1:9000"
                     },
                     {
                         "url": "http://txmanager2:9000"
                     },
                     {
                         "url": "http://txmanager3:9000"
                     }
                  ],
                  "keys": {
                    "passwords": [],
                    "keyData": [
                      {
                        "config": $$(cat $${DDIR}/tm.key),
                        "publicKey": "$$(cat $${DDIR}/tm.pub)"
                      }
                    ]
                  },
                  "alwaysSendTo": []
                }
            EOF
                cat $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
                java -Xms128M -Xmx128M -jar /tessera/tessera-app.jar -configfile $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
                ;;
              constellation)
                echo "socket=\"$${DDIR}/tm.ipc\"\npublickeys=[\"/examples/keys/tm$${NODE_ID}.pub\"]\n" > $${DDIR}/tm.conf
                constellation-node \
                  --url=http://$$(hostname -i):9000/ \
                  --port=9000 \
                  --socket=$${DDIR}/tm.ipc \
                  --othernodes=http://172.16.239.101:9000/,http://172.16.239.102:9000/,http://172.16.239.103:9000/,http://172.16.239.104:9000/,http://172.16.239.105:9000/ \
                  --publickeys=/examples/keys/tm$${NODE_ID}.pub \
                  --privatekeys=/examples/keys/tm$${NODE_ID}.key \
                  --storage=$${DDIR} \
                  --verbosity=4
                ;;
              *)
                echo "Invalid Transaction Manager"
                exit 1
                ;;
            esac
services:
    node1:
        <<: *quorum-def
        hostname: node1
        ports:
            - '22000:8545'
        volumes:
            - vol1:/qdata
            - ./config:/config:ro
            - ./scripts:/scripts:ro
        depends_on:
            - txmanager1
            - splunk
        environment:
            - PRIVATE_CONFIG=/qdata/tm/tm.ipc
            - NODE_ID=1
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.11
        logging:
            <<: *default-logging
            options:
                <<: *log-opts
                splunk-sourcetype: 'docker:quorum-node'
                splunk-source: node1
    txmanager1:
        <<: *tx-manager-def
        hostname: txmanager1
        ports:
            - '9081:9080'
        volumes:
            - vol1:/qdata
            - ./config:/config:ro
        depends_on:
            - splunk
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.101
        environment:
            - NODE_ID=1
        logging:
            <<: *default-logging
            options:
                <<: *log-opts
                splunk-sourcetype: 'docker:tessera'
                splunk-source: node1

    node2:
        <<: *quorum-def
        hostname: node2
        ports:
            - '22001:8545'
        volumes:
            - vol2:/qdata
            - ./config:/config:ro
            - ./scripts:/scripts:ro
        depends_on:
            - txmanager2
            - splunk
        environment:
            - PRIVATE_CONFIG=/qdata/tm/tm.ipc
            - NODE_ID=2
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.12
        logging:
            <<: *default-logging
            options:
                <<: *log-opts
                splunk-sourcetype: 'docker:quorum-node'
                splunk-source: node2

    txmanager2:
        <<: *tx-manager-def
        hostname: txmanager2
        ports:
            - '9082:9080'
        volumes:
            - vol2:/qdata
            - ./config:/config:ro
        depends_on:
            - splunk
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.102
        environment:
            - NODE_ID=2
        logging:
            <<: *default-logging
            options:
                <<: *log-opts
                splunk-sourcetype: 'docker:tessera'
                splunk-source: node2

    node3:
        <<: *quorum-def
        hostname: node3
        ports:
            - '22002:8545'
        volumes:
            - vol3:/qdata
            - ./config:/config:ro
            - ./scripts:/scripts:ro
        depends_on:
            - txmanager3
            - splunk
        environment:
            - PRIVATE_CONFIG=/qdata/tm/tm.ipc
            - NODE_ID=3
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.13
        logging:
            <<: *default-logging
            options:
                <<: *log-opts
                splunk-sourcetype: 'docker:quorum-node'
                splunk-source: node3

    txmanager3:
        <<: *tx-manager-def
        hostname: txmanager3
        ports:
            - '9083:9080'
        volumes:
            - vol3:/qdata
            - ./config:/config:ro
        depends_on:
            - splunk
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.103
        environment:
            - NODE_ID=3
        logging:
            <<: *default-logging
            options:
                <<: *log-opts
                splunk-sourcetype: 'docker:tessera'
                splunk-source: node3

    splunk:
        container_name: splunk
        image: splunk/splunk:latest
        environment:
            - SPLUNK_START_ARGS=--accept-license
            - SPLUNK_PASSWORD=changeme
            - SPLUNK_HEC_TOKEN=11111111-1111-1111-1111-111111111111
            - SPLUNK_APPS_URL=http://s3.amazonaws.com/splunk-app-quorum/master/splunk-app-quorum-0.1.1.tgz
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.200
        ports:
            - '18000:8000'
            - '18088:8088'
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:8000']
            interval: 5s
            timeout: 5s
            retries: 20
        volumes:
            - ./config/splunk.yml:/tmp/defaults/default.yml
            - /opt/splunk/var
            - /opt/splunk/etc

    cadivsor:
        container_name: cadvisor
        image: google/cadvisor:latest
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        command:
            - --storage_driver=statsd
            - --storage_driver_host=splunk:8125
            - --storage_driver_db=docker
            - --docker_only=true
            - --enable_load_reader=true
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.201
        user: root
        depends_on:
            - splunk
        logging:
            <<: *default-logging
            options:
                <<: *log-opts
                splunk-sourcetype: 'docker:cadvisor'
                splunk-source: cadvisor

    ethlogger1:
        image: splunkdlt/ethlogger:latest
        container_name: ethlogger1
        environment:
            - ETH_RPC_URL=http://node1:8545
            - NETWORK_NAME=quorum
            - START_AT_BLOCK=genesis
            - SPLUNK_HEC_URL=https://splunk:8088
            - SPLUNK_HEC_TOKEN=11111111-1111-1111-1111-111111111111
            - SPLUNK_EVENTS_INDEX=ethereum
            - SPLUNK_METRICS_INDEX=metrics
            - SPLUNK_INTERNAL_INDEX=metrics
            - SPLUNK_HEC_REJECT_INVALID_CERTS=false
            - ABI_DIR=/abi
            - COLLECT_PENDING_TX=true
            - COLLECT_PEER_INFO=true
            - DEBUG=ethlogger:abi:*
        volumes:
            - ./abi:/abi
            - ethlogger1:/app
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.202
        deploy:
            resources:
                limits:
                    cpus: '0.20'
        depends_on:
            - splunk
            - node1
        restart: always

    ethlogger2:
        image: splunkdlt/ethlogger:latest
        container_name: ethlogger2
        environment:
            - ETH_RPC_URL=http://node2:8545
            - NETWORK_NAME=quorum
            - START_AT_BLOCK=genesis
            - SPLUNK_HEC_URL=https://splunk:8088
            - SPLUNK_HEC_TOKEN=11111111-1111-1111-1111-111111111111
            - SPLUNK_EVENTS_INDEX=ethereum
            - SPLUNK_METRICS_INDEX=metrics
            - SPLUNK_INTERNAL_INDEX=metrics
            - SPLUNK_HEC_REJECT_INVALID_CERTS=false
            - COLLECT_BLOCKS=false
            - ABI_DIR=/abi
            - COLLECT_PENDING_TX=true
            - COLLECT_PEER_INFO=true
            - DEBUG=ethlogger:abi:*
        volumes:
            - ./abi:/abi
            - ethlogger2:/app
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.203
        deploy:
            resources:
                limits:
                    cpus: '0.20'
        depends_on:
            - splunk
            - node2
        restart: always

    ethlogger3:
        image: splunkdlt/ethlogger:latest
        container_name: ethlogger3
        environment:
            - ETH_RPC_URL=http://node3:8545
            - NETWORK_NAME=quorum
            - START_AT_BLOCK=genesis
            - SPLUNK_HEC_URL=https://splunk:8088
            - SPLUNK_HEC_TOKEN=11111111-1111-1111-1111-111111111111
            - SPLUNK_EVENTS_INDEX=ethereum
            - SPLUNK_METRICS_INDEX=metrics
            - SPLUNK_INTERNAL_INDEX=metrics
            - SPLUNK_HEC_REJECT_INVALID_CERTS=false
            - COLLECT_BLOCKS=false
            - ABI_DIR=/abi
            - COLLECT_PENDING_TX=true
            - COLLECT_PEER_INFO=true
            - DEBUG=ethlogger:abi:*
        volumes:
            - ./abi:/abi
            - ethlogger3:/app
        networks:
            quorum-examples-net:
                ipv4_address: 172.16.239.204
        deploy:
            resources:
                limits:
                    cpus: '0.20'
        depends_on:
            - splunk
            - node3
        restart: always

networks:
    quorum-examples-net:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 172.16.239.0/24
volumes:
    'vol1':
    'vol2':
    'vol3':
    'ethlogger1':
    'ethlogger2':
    'ethlogger3':
